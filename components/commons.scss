@import "./colors";
@import "./globals";
@import "./mixins";
@import "~normalize.css";

html {
  font-size: 62.5%;
}

body {
  position: absolute;
  width: 100%;
  height: 100%;
  padding: 0;
  margin: 0;
  font-family: Roboto, sans-serif;
  font-size: 1.6rem;
  -webkit-touch-callout: none;
  * {
    -webkit-tap-highlight-color: rgba(255, 255, 255, 0);
  }
}

a, abbr, address, article, aside, audio, b, blockquote, body, caption, cite,
code, dd, del, dfn, dialog, div, dl, dt, em, fieldset, figure, footer, form, h1,
h2, h3, h4, h5, h6, header, hgroup, hr, html, i, iframe, img, ins, kbd, label,
legend, li, mark, menu, nav, object, ol, p, pre, q, samp, section, small, span,
strong, sub, sup, table, tbody, td, tfoot, th, thead, time, tr, ul, var, video {
  padding: 0;
  margin: 0;
  border: 0;
  outline: 0;
}

*, *:before, *:after {
  box-sizing: border-box;
  padding: 0;
  margin: 0;
}

h1, h2, h3, h4, h5, h6, label, p, button, abbr, a, span, small {
  font-smoothing: antialiased;
  -webkit-font-smoothing: antialiased;
  text-size-adjust: 100%;
}

a {
  text-decoration: none;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
}

input:not([type="checkbox"]):not([type="radio"]), button {
  outline: none;
  appearance: none;
  -webkit-touch-callout: none;
  -webkit-tap-highlight-color: rgba(255, 255, 255, 0);
}

// -- Remove firefox default style for required inputs
input[required]:-moz-ui-invalid {
  box-shadow: none;
}

// -- Material design font sizes
h1 small, h2 small, h3 small, h4 small, h5 small, h6 small {
  @include typo-display-3($color-contrast: true);
}

h1 {
  @include typo-display-3;
}

h2 {
  @include typo-display-2;
}

h3 {
  @include typo-display-1;
}

h4 {
  @include typo-headline;
}

h5 {
  @include typo-title;
}

h6 {
  @include typo-subhead;
}

p {
  @include typo-body-1;
}

// Grid
.mdl {
  &-grid {
    display: flex;
    flex-flow: row wrap;
    margin: 0 auto 0 auto;
    align-items: stretch;

    &.mdl-grid--no-spacing {
      padding: 0;

      > .mdl-cell {
        margin: 0;
      }
    }
  }
  &-cell {
    box-sizing: border-box;

    &--top {
      align-self: flex-start;
    }

    &--middle {
      align-self: center;
    }

    &--bottom {
      align-self: flex-end;
    }

    &--stretch {
      align-self: stretch;
    }
  }
}

// Define order override classes.
@for $i from 1 through $grid-max-columns {
  .mdl-cell--order-#{$i} {
    order: $i;
  }
}

////////// Phone //////////

@media (max-width: $grid-tablet-breakpoint - 1) {
  .mdl-grid {
    padding: $grid-phone-margin - ($grid-phone-gutter / 2);
  }

  .mdl-cell {
    margin: $grid-phone-gutter / 2;
    @include partial-size($grid-cell-default-columns, $grid-phone-columns,
        $grid-phone-gutter);
  }

  .mdl-cell--hide-phone {
    display: none !important;
  }

  // Define order override classes.
  @for $i from 1 through $grid-max-columns {
    .mdl-cell--order-#{$i}-phone.mdl-cell--order-#{$i}-phone {
      order: $i;
    }
  }

  // Define partial sizes for columnNumber < totalColumns.
  @for $i from 1 through ($grid-phone-columns - 1) {
    .mdl-cell--#{$i}-col,
    .mdl-cell--#{$i}-col-phone.mdl-cell--#{$i}-col-phone {
      @include partial-size($i, $grid-phone-columns, $grid-phone-gutter);
    }
  }

  // Define 100% for everything else.
  @for $i from $grid-phone-columns through $grid-desktop-columns {
    .mdl-cell--#{$i}-col,
    .mdl-cell--#{$i}-col-phone.mdl-cell--#{$i}-col-phone {
      @include full-size($grid-phone-gutter);
    }
  }

  // Define valid phone offsets.
  @for $i from 1 through ($grid-phone-columns - 1) {
    .mdl-cell--#{$i}-offset,
    .mdl-cell--#{$i}-offset-phone.mdl-cell--#{$i}-offset-phone {
      @include offset-size($i, $grid-phone-columns, $grid-phone-gutter);
    }
  }
}

////////// Tablet //////////

@media (min-width: $grid-tablet-breakpoint) and (max-width: $grid-desktop-breakpoint - 1) {
  .mdl-grid {
    padding: $grid-tablet-margin - ($grid-tablet-gutter / 2);
  }

  .mdl-cell {
    margin: $grid-tablet-gutter / 2;
    @include partial-size($grid-cell-default-columns, $grid-tablet-columns,
        $grid-tablet-gutter);
  }

  .mdl-cell--hide-tablet {
    display: none !important;
  }

  // Define order override classes.
  @for $i from 1 through $grid-max-columns {
    .mdl-cell--order-#{$i}-tablet.mdl-cell--order-#{$i}-tablet {
      order: $i;
    }
  }

  // Define partial sizes for columnNumber < totalColumns.
  @for $i from 1 through ($grid-tablet-columns - 1) {
    .mdl-cell--#{$i}-col,
    .mdl-cell--#{$i}-col-tablet.mdl-cell--#{$i}-col-tablet {
      @include partial-size($i, $grid-tablet-columns, $grid-tablet-gutter);
    }
  }

  // Define 100% for everything else.
  @for $i from $grid-tablet-columns through $grid-desktop-columns {
    .mdl-cell--#{$i}-col,
    .mdl-cell--#{$i}-col-tablet.mdl-cell--#{$i}-col-tablet {
      @include full-size($grid-tablet-gutter);
    }
  }

  // Define valid tablet offsets.
  @for $i from 1 through ($grid-tablet-columns - 1) {
    .mdl-cell--#{$i}-offset,
    .mdl-cell--#{$i}-offset-tablet.mdl-cell--#{$i}-offset-tablet {
      @include offset-size($i, $grid-tablet-columns, $grid-tablet-gutter);
    }
  }
}

////////// Desktop //////////

@media (min-width: $grid-desktop-breakpoint) {
  .mdl-grid {
    padding: $grid-desktop-margin - ($grid-desktop-gutter / 2);
  }

  .mdl-cell {
    margin: $grid-desktop-gutter / 2;
    @include partial-size($grid-cell-default-columns, $grid-desktop-columns,
        $grid-desktop-gutter);
  }

  .mdl-cell--hide-desktop {
    display: none !important;
  }

  // Define order override classes.
  @for $i from 1 through $grid-max-columns {
    .mdl-cell--order-#{$i}-desktop.mdl-cell--order-#{$i}-desktop {
      order: $i;
    }
  }

  // Define partial sizes for all numbers of columns.
  @for $i from 1 through $grid-desktop-columns {
    .mdl-cell--#{$i}-col,
    .mdl-cell--#{$i}-col-desktop.mdl-cell--#{$i}-col-desktop {
      @include partial-size($i, $grid-desktop-columns, $grid-desktop-gutter);
    }
  }

  // Define valid desktop offsets.
  @for $i from 1 through ($grid-desktop-columns - 1) {
    .mdl-cell--#{$i}-offset,
    .mdl-cell--#{$i}-offset-desktop.mdl-cell--#{$i}-offset-desktop {
      @include offset-size($i, $grid-desktop-columns, $grid-desktop-gutter);
    }
  }
}
